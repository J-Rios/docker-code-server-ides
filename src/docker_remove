#!/usr/bin/env bash
#
# Description:
# Remove a specified Docker Image.
#

###############################################################################

# Get Docker images names from each provided argument
docker_image_name=()
for i in "$@"
do
    docker_image_name+=("${i}")
done

# Check if any docker images has been provided
if [ ${#docker_image_name[@]} -eq 0 ]; then
    echo ""
    echo "You need to provide a Docker Image ID to remove"
    echo "Examples:"
    echo "  docker_remove a_image_name"
    echo "  docker_remove a_image_name another_one why_not_other"
    echo ""
    exit 1
fi

# For each Image ID provided
for img_name in "$docker_image_name"
do
    # Get Docker Container ID from Image Name
    container_id=`docker ps -a | grep -e "{img_name}" | cut -d' ' -f1`

    # Stop Docker Container
    docker stop $container_id

    # Get Docker Image ID from name
    image_id=`docker images --format="{{.Repository}} {{.ID}}" | \
              grep "^${img_name} " | cut -d' ' -f2`

    # Remove Docker Image
    docker image rm -f $image_id
done

# Remove unused residual images
#echo "Removing unused residual images"
#docker image prune

# Remove dangling images
echo "Removing dangling images"
docker rmi -f $(docker images --filter "dangling=true" -q --no-trunc)

echo ""
echo "Image/s removed"
echo ""

exit 0
